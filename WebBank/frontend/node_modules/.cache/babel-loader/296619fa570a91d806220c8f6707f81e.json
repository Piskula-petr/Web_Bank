{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Dropbox\\\\Git\\\\Web_Bank\\\\WebBank\\\\frontend\\\\src\\\\overviewPage\\\\PaymentHistory.js\";\nimport React, { Component } from \"react\";\nimport DetailTable from \"./DetailTable.js\";\nexport default class PaymentHistory extends Component {\n  // Konstruktor ////////////////////////////////////////////////////////////////////\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Platby\n      payments: [],\n      // Celkový počet plateb\n      paymentsCount: 0\n    };\n    this.showMorepayments = this.showMorepayments.bind(this);\n  } // Získání dat ////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    let currentDate = new Date(); // Request - vrací platby ze zadaného měsíce\n\n    fetch(\"http://localhost:8080/api/payments/\" + this.props.userID + \"/year=\" + currentDate.getFullYear() + \"&month=\" + (currentDate.getMonth() + 1)).then(response => response.json().then(data => this.setState({\n      payments: data\n    }))); // Request - vrací celkový počat plateb\n\n    fetch(\"http://localhost:8080/api/payments/count/\" + this.props.userID).then(response => response.json().then(data => this.setState({\n      paymentsCount: data.paymentsCount\n    })));\n  } // Zobrazení dalších plateb //////////////////////////////////////////////////////\n\n\n  showMorepayments() {\n    const length = this.state.payments.length; // Datum poslední zobrazené platby [01], [01], [2020];\n\n    const lastPaymentDate = this.state.payments[length - 1].paymentDate.split(\".\");\n    const month = parseInt(lastPaymentDate[1]) - 1;\n    const year = lastPaymentDate[2];\n    let payments = this.state.payments; // Request - vrací platby ze zadaného měsíce\n\n    fetch(\"http://localhost:8080/api/payments/\" + this.props.userID + \"/year=\" + year + \"&month=\" + month).then(response => response.json().then(data => {\n      payments.push(...data);\n      this.setState({\n        payments: payments\n      });\n    }));\n  } // Naformátování čísla //////////////////////////////////////////////////////////////\n\n\n  numberFormatter(number) {\n    return number.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \" \").replace(\".\", \",\");\n  } // Vykreslení //////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    let year = new Date().getFullYear();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"history\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, this.state.payments.map((item, index) => /*#__PURE__*/React.createElement(\"details\", {\n      id: \"payment\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"summary\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      id: \"column1\",\n      rowSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"paymentDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 45\n      }\n    }, item.paymentDate.replace(year, \"\"))), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"column2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 45\n      }\n    }, item.name)), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"column3\",\n      rowSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"amount\",\n      className: item.mark.includes(\"+\") ? \"plus\" : \"minus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 45\n      }\n    }, item.mark, this.numberFormatter((item.amount * this.props.currency.exchangeRate).toFixed(2)), \"\\xA0\", this.props.currency.name))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"paymentType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 45\n      }\n    }, item.paymentType)))))), /*#__PURE__*/React.createElement(DetailTable, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buttonContainer\",\n      className: this.state.payments.length === this.state.paymentsCount ? \"hide\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showMorepayments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Na\\u010D\\xEDst star\\u0161\\xED platby\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MSI/Dropbox/Git/Web_Bank/WebBank/frontend/src/overviewPage/PaymentHistory.js"],"names":["React","Component","DetailTable","PaymentHistory","constructor","props","state","payments","paymentsCount","showMorepayments","bind","componentDidMount","currentDate","Date","fetch","userID","getFullYear","getMonth","then","response","json","data","setState","length","lastPaymentDate","paymentDate","split","month","parseInt","year","push","numberFormatter","number","toString","replace","render","map","item","index","name","mark","includes","amount","currency","exchangeRate","toFixed","paymentType"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport DetailTable from \"./DetailTable.js\";\r\n\r\nexport default class PaymentHistory extends Component {\r\n\r\n// Konstruktor ////////////////////////////////////////////////////////////////////\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // Platby\r\n            payments: [],\r\n\r\n            // Celkový počet plateb\r\n            paymentsCount: 0,\r\n        }\r\n\r\n        this.showMorepayments = this.showMorepayments.bind(this);\r\n    }\r\n\r\n// Získání dat ////////////////////////////////////////////////////////////////////\r\n\r\n    componentDidMount() {\r\n\r\n        let currentDate = new Date();\r\n\r\n        // Request - vrací platby ze zadaného měsíce\r\n        fetch(\"http://localhost:8080/api/payments/\" + this.props.userID \r\n            + \"/year=\" + currentDate.getFullYear() + \"&month=\" + (currentDate.getMonth() + 1))\r\n            .then(response => response.json().then(data => this.setState({\r\n                payments: data,\r\n        })));\r\n\r\n        // Request - vrací celkový počat plateb\r\n        fetch(\"http://localhost:8080/api/payments/count/\" + this.props.userID)\r\n            .then(response => response.json().then(data => this.setState({\r\n                paymentsCount: data.paymentsCount,\r\n        })));\r\n    }\r\n\r\n// Zobrazení dalších plateb //////////////////////////////////////////////////////\r\n\r\n    showMorepayments() {\r\n\r\n        const length = this.state.payments.length;\r\n\r\n        // Datum poslední zobrazené platby [01], [01], [2020];\r\n        const lastPaymentDate = this.state.payments[length - 1].paymentDate.split(\".\");\r\n\r\n        const month = parseInt(lastPaymentDate[1]) - 1;\r\n        const year = lastPaymentDate[2];\r\n\r\n        let payments = this.state.payments;\r\n\r\n        // Request - vrací platby ze zadaného měsíce\r\n        fetch(\"http://localhost:8080/api/payments/\" + this.props.userID\r\n            + \"/year=\" + year + \"&month=\" + month)\r\n            .then(response => response.json().then(data => {\r\n\r\n            payments.push(...data);\r\n\r\n            this.setState({\r\n                payments: payments,\r\n            });\r\n        }));\r\n    }\r\n// Naformátování čísla //////////////////////////////////////////////////////////////\r\n\r\n    numberFormatter(number) {\r\n            \r\n        return number.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \" \")\r\n            .replace(\".\", \",\");\r\n    }\r\n\r\n// Vykreslení //////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n\r\n        let year = new Date().getFullYear();\r\n\r\n        return(\r\n            <div id=\"history\">\r\n\r\n                {this.state.payments.map((item, index) =>\r\n\r\n                    <details id=\"payment\" key={index}>\r\n                        <summary>\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td id=\"column1\" rowSpan=\"2\">\r\n                                            <div id=\"paymentDate\">{item.paymentDate.replace(year, \"\")}</div>\r\n                                        </td>\r\n\r\n                                        <td id=\"column2\">\r\n                                            <div id=\"name\">{item.name}</div>\r\n                                        </td>\r\n\r\n                                        <td id=\"column3\" rowSpan=\"2\">\r\n                                            <div id=\"amount\" className={(item.mark.includes(\"+\") ? \"plus\" : \"minus\")}>\r\n                                                {item.mark}\r\n                                                {this.numberFormatter(\r\n                                                    (item.amount * this.props.currency.exchangeRate).toFixed(2)\r\n                                                )}&nbsp;\r\n                                                {this.props.currency.name}\r\n                                            </div>\r\n                                        </td>  \r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div id=\"paymentType\">{item.paymentType}</div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </summary>\r\n\r\n                        <DetailTable item={item} />\r\n\r\n                    </details>\r\n                )}\r\n\r\n                <div id=\"buttonContainer\" className={(this.state.payments.length === this.state.paymentsCount ? \"hide\" : \"\")}>\r\n                    <button onClick={this.showMorepayments}>Načíst starší platby</button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}