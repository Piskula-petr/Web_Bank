{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Dropbox\\\\Git\\\\Web_Bank\\\\WebBank\\\\frontend\\\\src\\\\overviewPage\\\\PaymentsReport.js\";\nimport React, { Component } from \"react\";\nimport graph from \"../images/graph.png\";\nimport leftArrow from \"../images/left_arrow.png\";\nimport rightArrow from \"../images/right_arrow.png\";\nimport Months from \"../Months\";\nimport NumberFormatter from \"../\";\nimport BalanceGraphs from \"./BalanceGraphs\";\nexport default class PaymentsReport extends Component {\n  // Konstruktor /////////////////////////////////////////////////////////////////////\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Zobrazený měsíc\n      selectedMonth: {\n        name: \"\",\n        number: 0,\n        year: 0,\n        income: 0,\n        costs: 0,\n        balance: 0\n      }\n    };\n    this.nextMonth = this.nextMonth.bind(this);\n    this.previousMonth = this.previousMonth.bind(this);\n    this.numberFormatter = this.numberFormatter.bind(this);\n  } // Získání dat /////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    const date = new Date();\n    this.setState({\n      selectedMonth: { ...this.state.selectedMonth,\n        name: Months[date.getMonth() + 1],\n        number: date.getMonth() + 1,\n        year: date.getFullYear()\n      }\n    }); // Request - vrací součet plateb za zadaného měsíce\n\n    fetch(\"http://localhost:8080/api/payments/sum/\" + this.props.userID + \"/year=\" + date.getFullYear() + \"&month=\" + (date.getMonth() + 1)).then(response => response.json().then(data => this.setState({\n      selectedMonth: { ...this.state.selectedMonth,\n        income: data.income,\n        costs: data.costs,\n        balance: data.balance\n      }\n    })));\n  } // Načíst data z dalšího měsíce ///////////////////////////////////////////////////\n\n\n  nextMonth() {\n    const nextMonth = this.state.selectedMonth.number + 1; // Request - vrací součet plateb za zadaného měsíce\n\n    fetch(\"http://localhost:8080/api/payments/sum/\" + this.props.userID + \"/year=\" + this.state.selectedMonth.year + \"&month=\" + nextMonth).then(response => response.json().then(data => {\n      if (response.ok) {\n        this.setState({\n          selectedMonth: { ...this.state.selectedMonth,\n            name: Months[nextMonth],\n            number: nextMonth,\n            income: data.income,\n            costs: data.costs,\n            balance: data.balance\n          }\n        });\n      }\n    }));\n  } // Načíst data z minulého měsíce /////////////////////////////////////////////////\n\n\n  previousMonth() {\n    const previousMonth = this.state.selectedMonth.number - 1; // Request - vrací součet plateb za zadaného měsíce\n\n    fetch(\"http://localhost:8080/api/payments/sum/\" + this.props.userID + \"/year=\" + this.state.selectedMonth.year + \"&month=\" + previousMonth).then(response => response.json().then(data => {\n      if (response.ok) {\n        this.setState({\n          selectedMonth: { ...this.state.selectedMonth,\n            name: Months[previousMonth],\n            number: previousMonth,\n            income: data.income,\n            costs: data.costs,\n            balance: data.balance\n          }\n        });\n      }\n    }));\n  } // Naformátování čísla ///////////////////////////////////////////////////////////\n\n\n  numberFormatter(number) {\n    return number.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \" \").replace(\".\", \",\");\n  } // Vykreslení ////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    // Aktuální měsíc (číselně)\n    const currentMonth = new Date().getMonth() + 1;\n    const mark = this.state.selectedMonth.balance > 0 ? \"+\" : \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"report\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: graph,\n      alt: \"Graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"leftArrow\",\n      src: leftArrow,\n      alt: \"Left Arrow\",\n      onClick: this.previousMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }), this.state.selectedMonth.name, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"rightArrow\",\n      className: this.state.selectedMonth.number === currentMonth ? \"hide\" : \"\",\n      src: rightArrow,\n      alt: \"Right Arrow\",\n      onClick: this.nextMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"income\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"+\", this.numberFormatter(this.state.selectedMonth.income.toFixed(2)), \" CZK\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"costs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"-\", this.numberFormatter(this.state.selectedMonth.costs.toFixed(2)), \" CZK\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"balance\",\n      className: this.state.selectedMonth.balance > 0 ? \"plus\" : \"minus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, mark, this.numberFormatter(this.state.selectedMonth.balance.toFixed(2)), \" CZK\"), /*#__PURE__*/React.createElement(BalanceGraphs, {\n      userID: this.props.userID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MSI/Dropbox/Git/Web_Bank/WebBank/frontend/src/overviewPage/PaymentsReport.js"],"names":["React","Component","graph","leftArrow","rightArrow","Months","NumberFormatter","BalanceGraphs","PaymentsReport","constructor","props","state","selectedMonth","name","number","year","income","costs","balance","nextMonth","bind","previousMonth","numberFormatter","componentDidMount","date","Date","setState","getMonth","getFullYear","fetch","userID","then","response","json","data","ok","toString","replace","render","currentMonth","mark","toFixed"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport graph from \"../images/graph.png\";\r\nimport leftArrow from \"../images/left_arrow.png\";\r\nimport rightArrow from \"../images/right_arrow.png\";\r\n\r\nimport Months from \"../Months\";\r\nimport NumberFormatter from \"../\"\r\nimport BalanceGraphs from \"./BalanceGraphs\";\r\n\r\nexport default class PaymentsReport extends Component {\r\n\r\n// Konstruktor /////////////////////////////////////////////////////////////////////\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // Zobrazený měsíc\r\n            selectedMonth: {\r\n                name: \"\",\r\n                number: 0,\r\n                year: 0,\r\n                income: 0,\r\n                costs: 0,\r\n                balance: 0,\r\n            },\r\n        }\r\n\r\n        this.nextMonth = this.nextMonth.bind(this);\r\n        this.previousMonth = this.previousMonth.bind(this);\r\n        this.numberFormatter = this.numberFormatter.bind(this);\r\n    }\r\n\r\n// Získání dat /////////////////////////////////////////////////////////////////////\r\n\r\n    componentDidMount() {\r\n\r\n        const date = new Date();\r\n\r\n        this.setState({\r\n\r\n            selectedMonth: {\r\n                ...this.state.selectedMonth,\r\n                name: Months[date.getMonth() + 1],\r\n                number: date.getMonth() + 1,\r\n                year: date.getFullYear(),\r\n            },\r\n        });\r\n\r\n        // Request - vrací součet plateb za zadaného měsíce\r\n        fetch(\"http://localhost:8080/api/payments/sum/\" + this.props.userID + \r\n            \"/year=\" + date.getFullYear() + \"&month=\" + (date.getMonth() + 1))\r\n            .then(response => response.json().then(data => this.setState({\r\n\r\n                selectedMonth: {\r\n                        ...this.state.selectedMonth,\r\n                        income: data.income,\r\n                        costs: data.costs,\r\n                        balance: data.balance,\r\n                },\r\n        })));\r\n    }\r\n\r\n// Načíst data z dalšího měsíce ///////////////////////////////////////////////////\r\n\r\n    nextMonth() {\r\n\r\n        const nextMonth = this.state.selectedMonth.number + 1;\r\n\r\n        // Request - vrací součet plateb za zadaného měsíce\r\n        fetch(\"http://localhost:8080/api/payments/sum/\" + this.props.userID + \r\n            \"/year=\" + this.state.selectedMonth.year + \"&month=\" + nextMonth)\r\n            .then(response => response.json().then(data => {\r\n\r\n                if (response.ok) {\r\n\r\n                    this.setState({\r\n                        selectedMonth: {\r\n                            ...this.state.selectedMonth,\r\n                            name: Months[nextMonth],\r\n                            number: nextMonth,\r\n                            income: data.income,\r\n                            costs: data.costs,\r\n                            balance: data.balance,\r\n                        }\r\n                    });\r\n                }\r\n        }));\r\n    }\r\n\r\n// Načíst data z minulého měsíce /////////////////////////////////////////////////\r\n\r\n    previousMonth () {\r\n\r\n        const previousMonth = this.state.selectedMonth.number - 1;\r\n\r\n        // Request - vrací součet plateb za zadaného měsíce\r\n        fetch(\"http://localhost:8080/api/payments/sum/\" + this.props.userID + \r\n            \"/year=\" + this.state.selectedMonth.year + \"&month=\" + previousMonth)\r\n            .then(response => response.json().then(data => {\r\n\r\n                if (response.ok) {\r\n\r\n                    this.setState({\r\n                        selectedMonth: {\r\n                            ...this.state.selectedMonth,\r\n                            name: Months[previousMonth],\r\n                            number: previousMonth,\r\n                            income: data.income,\r\n                            costs: data.costs,\r\n                            balance: data.balance,\r\n                        }\r\n                    });\r\n                }\r\n        }));\r\n    }\r\n\r\n// Naformátování čísla ///////////////////////////////////////////////////////////\r\n\r\n    numberFormatter(number) {\r\n\r\n        return number.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \" \")\r\n            .replace(\".\", \",\");\r\n    }\r\n\r\n// Vykreslení ////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n\r\n        // Aktuální měsíc (číselně)\r\n        const currentMonth = new Date().getMonth() + 1;\r\n\r\n        const mark = (this.state.selectedMonth.balance > 0 ? \"+\" : \"\");\r\n\r\n        return(\r\n            <div id=\"report\">\r\n\r\n                <img src={graph} alt=\"Graph\" />\r\n\r\n                <div id=\"month\">\r\n                    <img id=\"leftArrow\" src={leftArrow} alt=\"Left Arrow\" onClick={this.previousMonth} />\r\n\r\n                    {this.state.selectedMonth.name}\r\n\r\n                    <img id=\"rightArrow\" \r\n                        className={(this.state.selectedMonth.number === currentMonth ? \"hide\" : \"\")} \r\n                        src={rightArrow} alt=\"Right Arrow\" onClick={this.nextMonth} />\r\n                </div>\r\n\r\n                <div id=\"income\">\r\n                    &#43;{this.numberFormatter(this.state.selectedMonth.income.toFixed(2))} CZK\r\n                </div>\r\n\r\n                <div id=\"costs\">\r\n                    &#45;{this.numberFormatter(this.state.selectedMonth.costs.toFixed(2))} CZK\r\n                </div>\r\n\r\n                <div id =\"balance\" className={(this.state.selectedMonth.balance > 0 ? \"plus\" : \"minus\")}>\r\n                    {mark}{this.numberFormatter(this.state.selectedMonth.balance.toFixed(2))} CZK\r\n                </div>\r\n\r\n                <BalanceGraphs userID={this.props.userID} />\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}