{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Dropbox\\\\Git\\\\Web_Bank\\\\WebBank\\\\frontend\\\\src\\\\overviewPage\\\\AccountInfo.js\";\nimport React, { Component } from \"react\";\nimport safe from \"../images/safe.png\";\nexport default class AccountInfo extends Component {\n  // Konstruktor ///////////////////////////////////////////////////////////////\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Uživatel\n      user: {\n        id: this.props.userID,\n        name: \"\",\n        surname: \"\",\n        email: \"\",\n        clientNumber: 0,\n        password: \"\",\n        balance: 0,\n        currency: \"\",\n        accountNumber: \"\"\n      },\n      // Seznam aktuálních kurzů\n      currencies: {\n        CZK: 0,\n        EUR: 0,\n        JPY: 0,\n        USD: 0\n      },\n      // Aktivní měna\n      activeCurrency: {\n        CZK: true,\n        EUR: false,\n        JPY: false,\n        USD: false\n      }\n    };\n    this.changeActiveCurrency = this.changeActiveCurrency.bind(this);\n  } // Získání dat ///////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    // Request - vrací seznam aktuálních kurzů\n    fetch(\"https://api.exchangeratesapi.io/latest?base=CZK\").then(response => response.json().then(data => this.setState({\n      currencies: {\n        CZK: data.rates.CZK,\n        EUR: data.rates.EUR,\n        JPY: data.rates.JPY,\n        USD: data.rates.USD\n      }\n    }))); // Request - vrací uživatele, podle ID\n\n    fetch(\"http://localhost:8080/api/user/\" + this.props.userID).then(response => response.json().then(data => this.setState({\n      user: data\n    })));\n  } // Změna stavu měny + nastavení  ////////////////////////////////////////////////////////////////\n\n\n  changeActiveCurrency(event) {\n    this.setState({\n      activeCurrency: {\n        [event.target.value]: true\n      }\n    }, () => {\n      // Nastavení kurzu a názvu měny\n      const activeCurrency = this.state.activeCurrency;\n\n      for (let key in activeCurrency) {\n        if (activeCurrency[key]) {\n          // Vybraná měna\n          const currency = {\n            exchangeRate: this.state.currencies[key],\n            name: key\n          }; // Nastavení měny (předek)\n\n          this.props.setCurrency(currency);\n        }\n      }\n    });\n  } // Naformátování čísla //////////////////////////////////////////////////////////////\n\n\n  numberFormatter(number) {\n    return number.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \" \").replace(\".\", \",\");\n  } // Vykreslení ////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    // Změna třídy tlačítka\n    let isCZK = this.state.activeCurrency.CZK ? \"active\" : \"\";\n    let isEUR = this.state.activeCurrency.EUR ? \"active\" : \"\";\n    let isJPY = this.state.activeCurrency.JPY ? \"active\" : \"\";\n    let isUSD = this.state.activeCurrency.USD ? \"active\" : \"\"; // Zůstatek * hodnota kurzu\n\n    let balance = parseFloat(this.state.user.balance) * this.props.currency.exchangeRate;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: safe,\n      alt: \"Safe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, this.state.user.name, \" \", this.state.user.surname), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"accountNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, this.state.user.accountNumber), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Aktu\\xE1ln\\xED z\\u016Fstatek:\", /*#__PURE__*/React.createElement(\"div\", {\n      id: \"balance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, this.numberFormatter(balance.toFixed(2)), \" \", this.props.currency.name)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buttonPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: isCZK,\n      onClick: this.changeActiveCurrency,\n      value: \"CZK\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: isEUR,\n      onClick: this.changeActiveCurrency,\n      value: \"EUR\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: isJPY,\n      onClick: this.changeActiveCurrency,\n      value: \"JPY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: isUSD,\n      onClick: this.changeActiveCurrency,\n      value: \"USD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MSI/Dropbox/Git/Web_Bank/WebBank/frontend/src/overviewPage/AccountInfo.js"],"names":["React","Component","safe","AccountInfo","constructor","props","state","user","id","userID","name","surname","email","clientNumber","password","balance","currency","accountNumber","currencies","CZK","EUR","JPY","USD","activeCurrency","changeActiveCurrency","bind","componentDidMount","fetch","then","response","json","data","setState","rates","event","target","value","key","exchangeRate","setCurrency","numberFormatter","number","toString","replace","render","isCZK","isEUR","isJPY","isUSD","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport safe from \"../images/safe.png\";\r\n\r\nexport default class AccountInfo extends Component {\r\n\r\n// Konstruktor ///////////////////////////////////////////////////////////////\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // Uživatel\r\n            user: {\r\n                id: this.props.userID,\r\n                name: \"\",\r\n                surname: \"\",\r\n                email: \"\",\r\n                clientNumber: 0,\r\n                password: \"\",\r\n                balance: 0,\r\n                currency: \"\",\r\n                accountNumber: \"\",\r\n            },\r\n\r\n            // Seznam aktuálních kurzů\r\n            currencies: {\r\n                CZK: 0,\r\n                EUR: 0,\r\n                JPY: 0,\r\n                USD: 0,\r\n            },\r\n\r\n            // Aktivní měna\r\n            activeCurrency: {\r\n                CZK: true,\r\n                EUR: false,\r\n                JPY: false,\r\n                USD: false,\r\n            },\r\n        }\r\n\r\n        this.changeActiveCurrency = this.changeActiveCurrency.bind(this);\r\n    }\r\n\r\n// Získání dat ///////////////////////////////////////////////////////////////\r\n\r\n    componentDidMount() {\r\n\r\n        // Request - vrací seznam aktuálních kurzů\r\n        fetch(\"https://api.exchangeratesapi.io/latest?base=CZK\")\r\n            .then(response => response.json().then(data => this.setState({\r\n                \r\n                currencies: {\r\n                    CZK: data.rates.CZK,\r\n                    EUR: data.rates.EUR,\r\n                    JPY: data.rates.JPY,\r\n                    USD: data.rates.USD,\r\n                } \r\n            })));\r\n\r\n        // Request - vrací uživatele, podle ID\r\n        fetch(\"http://localhost:8080/api/user/\" + this.props.userID)\r\n            .then(response => response.json().then(data => this.setState({\r\n                user: data,\r\n            })));\r\n    }\r\n\r\n// Změna stavu měny + nastavení  ////////////////////////////////////////////////////////////////\r\n\r\n    changeActiveCurrency(event) {\r\n\r\n        this.setState({\r\n            activeCurrency: {\r\n                [event.target.value]: true,\r\n            },\r\n        }, () => {\r\n\r\n            // Nastavení kurzu a názvu měny\r\n            const activeCurrency = this.state.activeCurrency;\r\n            for (let key in activeCurrency) {\r\n                \r\n                if (activeCurrency[key]) {\r\n\r\n                    // Vybraná měna\r\n                    const currency = {\r\n                        exchangeRate: this.state.currencies[key],\r\n                        name: key,\r\n                    }\r\n                    \r\n                    // Nastavení měny (předek)\r\n                    this.props.setCurrency(currency);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n// Naformátování čísla //////////////////////////////////////////////////////////////\r\n\r\n    numberFormatter(number) {\r\n        \r\n        return number.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \" \")\r\n            .replace(\".\", \",\");\r\n    }\r\n\r\n// Vykreslení ////////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n\r\n        // Změna třídy tlačítka\r\n        let isCZK = (this.state.activeCurrency.CZK ? \"active\" : \"\");\r\n        let isEUR = (this.state.activeCurrency.EUR ? \"active\" : \"\");\r\n        let isJPY = (this.state.activeCurrency.JPY ? \"active\" : \"\");\r\n        let isUSD = (this.state.activeCurrency.USD ? \"active\" : \"\");\r\n\r\n        // Zůstatek * hodnota kurzu\r\n        let balance = parseFloat(this.state.user.balance) * this.props.currency.exchangeRate;\r\n\r\n        return(\r\n            <div id=\"account\">\r\n\r\n                <img src={safe} alt=\"Safe\" />\r\n\r\n                <div id=\"user\">{this.state.user.name} {this.state.user.surname}</div>\r\n                <div id=\"accountNumber\">{this.state.user.accountNumber}</div>\r\n\r\n                <div>Aktuální zůstatek:\r\n                    <div id=\"balance\">{this.numberFormatter(balance.toFixed(2))} {this.props.currency.name}</div>\r\n                </div>\r\n\r\n                <div id=\"buttonPanel\">\r\n                    <input type=\"button\" className={isCZK} onClick={this.changeActiveCurrency} value=\"CZK\" />\r\n                    <input type=\"button\" className={isEUR} onClick={this.changeActiveCurrency} value=\"EUR\" />\r\n                    <input type=\"button\" className={isJPY} onClick={this.changeActiveCurrency} value=\"JPY\" />\r\n                    <input type=\"button\" className={isUSD} onClick={this.changeActiveCurrency} value=\"USD\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}