{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Dropbox\\\\Git\\\\Web_Bank\\\\WebBank\\\\frontend\\\\src\\\\overviewPage\\\\BalanceGraphs.js\";\nimport React, { Component } from \"react\";\nimport Months from \"../Months\";\nexport default class BalanceGraphs extends Component {\n  // Konstruktor //////////////////////////////////////////////////////////////////\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Rozměry plátna\n      width: 340,\n      height: 100,\n      // Aktuální měsíc\n      currentMonth: 0,\n      // Příjmy / Výdaje\n      monthsSum: []\n    };\n    this.drawGraphs = this.drawGraphs.bind(this);\n  } // Získání dat ////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    Num;\n    fetch(\"http://localhost:8080/api/payments/sum/\" + this.props.userID).then(response => response.json().then(data => this.setState({\n      monthsSum: data,\n      currentMonth: new Date().getMonth() + 1\n    }, () => this.drawGraphs())));\n  } // Vykreslení grafů ////////////////////////////////////////////////////////////////\n\n\n  drawGraphs() {\n    let maxValue = 0; // Nastavení nejvýšší hodnoty\n\n    for (let value of this.state.monthsSum) {\n      if (value.income > maxValue) {\n        maxValue = value.income;\n      }\n\n      if (value.costs > maxValue) {\n        maxValue = value.costs;\n      }\n    } // Šířka plátna - odsazení zprava\n\n\n    let WIDTH = this.state.width - 20; // Výška plátna\n\n    let HEIGHT = this.state.height; // Šířka sloupce grafu\n\n    let GRAPH_WIDTH = 25;\n    const context = this.refs.canvas.getContext(\"2d\");\n\n    for (let i = 0; i < 3; i++) {\n      // Výpočet výšky sloupce grafu\n      let costs = (this.state.monthsSum[i].costs / maxValue * HEIGHT).toFixed(1);\n      let income = (this.state.monthsSum[i].income / maxValue * HEIGHT).toFixed(1); // Graf výdajů\n\n      context.fillStyle = \"#B22222\";\n      context.fillRect(WIDTH - GRAPH_WIDTH, HEIGHT - costs, GRAPH_WIDTH, costs); // Graf příjmů\n\n      context.fillStyle = \"#0f862f\";\n      context.fillRect(WIDTH - 2 * GRAPH_WIDTH - 3, HEIGHT - income, GRAPH_WIDTH, income); // Snížení šířky\n\n      WIDTH = WIDTH - 123;\n    }\n  } // Vykreslení ////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"graphs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvas\",\n      ref: \"canvas\",\n      width: this.state.width,\n      height: this.state.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, Months[this.state.currentMonth - 2]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, Months[this.state.currentMonth - 1]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, Months[this.state.currentMonth])))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MSI/Dropbox/Git/Web_Bank/WebBank/frontend/src/overviewPage/BalanceGraphs.js"],"names":["React","Component","Months","BalanceGraphs","constructor","props","state","width","height","currentMonth","monthsSum","drawGraphs","bind","componentDidMount","Num","fetch","userID","then","response","json","data","setState","Date","getMonth","maxValue","value","income","costs","WIDTH","HEIGHT","GRAPH_WIDTH","context","refs","canvas","getContext","i","toFixed","fillStyle","fillRect","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport Months from \"../Months\"\r\n\r\nexport default class BalanceGraphs extends Component {\r\n\r\n// Konstruktor //////////////////////////////////////////////////////////////////\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // Rozměry plátna\r\n            width: 340,\r\n            height: 100,\r\n\r\n            // Aktuální měsíc\r\n            currentMonth: 0,\r\n\r\n            // Příjmy / Výdaje\r\n            monthsSum: [],\r\n        }\r\n\r\n        this.drawGraphs = this.drawGraphs.bind(this);\r\n    }\r\n\r\n// Získání dat ////////////////////////////////////////////////////////////////////\r\n\r\n    componentDidMount() {\r\n\r\n        Num\r\n\r\n        fetch(\"http://localhost:8080/api/payments/sum/\" + this.props.userID)\r\n            .then(response => response.json().then(data => this.setState({\r\n\r\n                monthsSum: data,\r\n                currentMonth: new Date().getMonth() + 1,\r\n\r\n            }, () => this.drawGraphs()\r\n        )));\r\n    }\r\n\r\n// Vykreslení grafů ////////////////////////////////////////////////////////////////\r\n\r\n    drawGraphs() {\r\n\r\n        let maxValue = 0;\r\n\r\n        // Nastavení nejvýšší hodnoty\r\n        for (let value of this.state.monthsSum) {\r\n            \r\n            if (value.income > maxValue) {\r\n                maxValue = value.income;\r\n            }\r\n\r\n            if (value.costs > maxValue) {\r\n                maxValue = value.costs;\r\n            } \r\n        }\r\n\r\n        // Šířka plátna - odsazení zprava\r\n        let WIDTH = this.state.width - 20;\r\n\r\n        // Výška plátna\r\n        let HEIGHT = this.state.height;\r\n\r\n        // Šířka sloupce grafu\r\n        let GRAPH_WIDTH = 25;\r\n\r\n        const context = this.refs.canvas.getContext(\"2d\");\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n\r\n            // Výpočet výšky sloupce grafu\r\n            let costs = ((this.state.monthsSum[i].costs / maxValue) * HEIGHT).toFixed(1);\r\n            let income = ((this.state.monthsSum[i].income / maxValue) * HEIGHT).toFixed(1);\r\n\r\n            // Graf výdajů\r\n            context.fillStyle = \"#B22222\";\r\n            context.fillRect(WIDTH - GRAPH_WIDTH, HEIGHT - costs, GRAPH_WIDTH, costs);\r\n    \r\n            // Graf příjmů\r\n            context.fillStyle = \"#0f862f\";\r\n            context.fillRect(WIDTH - (2 * GRAPH_WIDTH) - 3, HEIGHT - income, GRAPH_WIDTH, income);\r\n           \r\n            // Snížení šířky\r\n            WIDTH = WIDTH - 123;\r\n        }\r\n    }\r\n\r\n// Vykreslení ////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div id=\"graphs\">\r\n                <canvas id=\"canvas\" \r\n                        ref=\"canvas\"\r\n                        width={this.state.width} \r\n                        height={this.state.height} \r\n                />\r\n\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                {Months[this.state.currentMonth - 2]}\r\n                            </td>\r\n\r\n                            <td>\r\n                                {Months[this.state.currentMonth - 1]}\r\n                            </td>\r\n\r\n                            <td>\r\n                                {Months[this.state.currentMonth]}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}