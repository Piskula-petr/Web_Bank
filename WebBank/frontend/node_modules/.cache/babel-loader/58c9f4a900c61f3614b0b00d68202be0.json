{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Dropbox\\\\Git\\\\Web_Bank\\\\WebBank\\\\frontend\\\\src\\\\overviewPage\\\\MonthReport.js\";\nimport React, { Component } from \"react\";\nimport graph from \"../images/graph.png\";\nimport leftArrow from \"../images/left_arrow.png\";\nimport rightArrow from \"../images/right_arrow.png\";\nimport Months from \"../Months\";\nimport NumberFormatter from \"../NumberFormatter\";\nexport default class MonthReport extends Component {\n  // Konstruktor /////////////////////////////////////////////////////////////////////\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Zobrazený měsíc\n      selectedMonth: {\n        name: \"\",\n        number: 0,\n        year: 0,\n        income: 0,\n        costs: 0,\n        balance: 0\n      }\n    };\n    this.nextMonth = this.nextMonth.bind(this);\n    this.previousMonth = this.previousMonth.bind(this);\n  } // Získání dat /////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {\n    const date = new Date();\n    this.setState({\n      selectedMonth: { ...this.state.selectedMonth,\n        name: Months[date.getMonth() + 1],\n        number: date.getMonth() + 1,\n        year: date.getFullYear()\n      }\n    }); // Request - vrací součet plateb za zadaného měsíce\n\n    fetch(\"http://localhost:8080/api/payments/sum/month\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"userID\": this.props.userID,\n        \"month\": date.getMonth() + 1,\n        \"year\": date.getFullYear()\n      })\n    }).then(response => response.json().then(data => this.setState({\n      selectedMonth: { ...this.state.selectedMonth,\n        income: data.income,\n        costs: data.costs,\n        balance: data.balance\n      }\n    })));\n  } // Načíst data z dalšího měsíce ///////////////////////////////////////////////////\n\n\n  nextMonth() {\n    const nextMonth = this.state.selectedMonth.number + 1;\n    console.log(previousMonth + \"/\" + year); // Request - vrací součet plateb za zadaného měsíce\n\n    fetch(\"http://localhost:8080/api/payments/sum/month\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"userID\": this.props.userID,\n        \"month\": nextMonth,\n        \"year\": this.state.selectedMonth.year\n      })\n    }).then(response => response.json().then(data => {\n      if (response.ok) {\n        this.setState({\n          selectedMonth: { ...this.state.selectedMonth,\n            name: Months[nextMonth],\n            number: nextMonth,\n            income: data.income,\n            costs: data.costs,\n            balance: data.balance\n          }\n        });\n      }\n    }));\n  } // Načíst data z minulého měsíce /////////////////////////////////////////////////\n\n\n  previousMonth() {\n    let previousMonth = this.state.selectedMonth.number - 1;\n    let year = this.state.selectedMonth.year; // Přechod na jiný rok\n\n    if (previousMonth < 1) {\n      previousMonth = 12;\n      year = year - 1;\n    }\n\n    console.log(previousMonth + \"/\" + year); // Request - vrací součet plateb za zadaného měsíce\n\n    fetch(\"http://localhost:8080/api/payments/sum/month\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"userID\": this.props.userID,\n        \"month\": previousMonth,\n        \"year\": year\n      })\n    }).then(response => response.json().then(data => {\n      if (response.ok) {\n        this.setState({\n          selectedMonth: { ...this.state.selectedMonth,\n            name: Months[previousMonth],\n            number: previousMonth,\n            year: year,\n            income: data.income,\n            costs: data.costs,\n            balance: data.balance\n          }\n        });\n      }\n    }));\n  } // Vykreslení ////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    // Aktuální měsíc (číselně)\n    const currentMonth = new Date().getMonth() + 1;\n    const mark = this.state.selectedMonth.balance > 0 ? \"+\" : \"\";\n    const income = this.state.selectedMonth.income * this.props.currency.exchangeRate;\n    const costs = this.state.selectedMonth.costs * this.props.currency.exchangeRate;\n    const balance = this.state.selectedMonth.balance * this.props.currency.exchangeRate;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: graph,\n      alt: \"Graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"leftArrow\",\n      src: leftArrow,\n      alt: \"Left Arrow\",\n      onClick: this.previousMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }), this.state.selectedMonth.name, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"rightArrow\",\n      className: this.state.selectedMonth.number === currentMonth ? \"hide\" : \"\",\n      src: rightArrow,\n      alt: \"Right Arrow\",\n      onClick: this.nextMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"income\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"+\", NumberFormatter(income.toFixed(2)), \"\\xA0\", this.props.currency.name), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"costs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, \"-\", NumberFormatter(costs.toFixed(2)), \"\\xA0\", this.props.currency.name), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"balance\",\n      className: this.state.selectedMonth.balance > 0 ? \"plus\" : \"minus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, mark, NumberFormatter(balance.toFixed(2)), \"\\xA0\", this.props.currency.name));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MSI/Dropbox/Git/Web_Bank/WebBank/frontend/src/overviewPage/MonthReport.js"],"names":["React","Component","graph","leftArrow","rightArrow","Months","NumberFormatter","MonthReport","constructor","props","state","selectedMonth","name","number","year","income","costs","balance","nextMonth","bind","previousMonth","componentDidMount","date","Date","setState","getMonth","getFullYear","fetch","method","headers","body","JSON","stringify","userID","then","response","json","data","console","log","ok","render","currentMonth","mark","currency","exchangeRate","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,eAAe,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAEnD;AAEIO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAET;AACAC,MAAAA,aAAa,EAAE;AACXC,QAAAA,IAAI,EAAE,EADK;AAEXC,QAAAA,MAAM,EAAE,CAFG;AAGXC,QAAAA,IAAI,EAAE,CAHK;AAIXC,QAAAA,MAAM,EAAE,CAJG;AAKXC,QAAAA,KAAK,EAAE,CALI;AAMXC,QAAAA,OAAO,EAAE;AANE;AAHN,KAAb;AAaA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH,GAtB8C,CAwBnD;;;AAEIE,EAAAA,iBAAiB,GAAG;AAEhB,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEA,SAAKC,QAAL,CAAc;AAEVb,MAAAA,aAAa,EAAE,EACX,GAAG,KAAKD,KAAL,CAAWC,aADH;AAEXC,QAAAA,IAAI,EAAEP,MAAM,CAACiB,IAAI,CAACG,QAAL,KAAkB,CAAnB,CAFD;AAGXZ,QAAAA,MAAM,EAAES,IAAI,CAACG,QAAL,KAAkB,CAHf;AAIXX,QAAAA,IAAI,EAAEQ,IAAI,CAACI,WAAL;AAJK;AAFL,KAAd,EAJgB,CAchB;;AACAC,IAAAA,KAAK,CAAC,8CAAD,EAAiD;AAElDC,MAAAA,MAAM,EAAE,MAF0C;AAGlDC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAHyC;AAKlDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAU,KAAKvB,KAAL,CAAWwB,MADJ;AAEjB,iBAASX,IAAI,CAACG,QAAL,KAAkB,CAFV;AAGjB,gBAAQH,IAAI,CAACI,WAAL;AAHS,OAAf;AAL4C,KAAjD,CAAL,CAWGQ,IAXH,CAWQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI,KAAKb,QAAL,CAAc;AAE3Db,MAAAA,aAAa,EAAE,EACP,GAAG,KAAKD,KAAL,CAAWC,aADP;AAEPI,QAAAA,MAAM,EAAEsB,IAAI,CAACtB,MAFN;AAGPC,QAAAA,KAAK,EAAEqB,IAAI,CAACrB,KAHL;AAIPC,QAAAA,OAAO,EAAEoB,IAAI,CAACpB;AAJP;AAF4C,KAAd,CAA7B,CAXpB;AAoBH,GA7D8C,CA+DnD;;;AAEIC,EAAAA,SAAS,GAAG;AAER,UAAMA,SAAS,GAAG,KAAKR,KAAL,CAAWC,aAAX,CAAyBE,MAAzB,GAAkC,CAApD;AAEAyB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,aAAa,GAAG,GAAhB,GAAsBN,IAAlC,EAJQ,CAMR;;AACAa,IAAAA,KAAK,CAAC,8CAAD,EAAiD;AAEtDC,MAAAA,MAAM,EAAE,MAF8C;AAGtDC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAH6C;AAKtDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAU,KAAKvB,KAAL,CAAWwB,MADJ;AAEjB,iBAASf,SAFQ;AAGjB,gBAAQ,KAAKR,KAAL,CAAWC,aAAX,CAAyBG;AAHhB,OAAf;AALgD,KAAjD,CAAL,CAWGoB,IAXH,CAWQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AAE7C,UAAIF,QAAQ,CAACK,EAAb,EAAiB;AAEb,aAAKhB,QAAL,CAAc;AACVb,UAAAA,aAAa,EAAE,EACX,GAAG,KAAKD,KAAL,CAAWC,aADH;AAEXC,YAAAA,IAAI,EAAEP,MAAM,CAACa,SAAD,CAFD;AAGXL,YAAAA,MAAM,EAAEK,SAHG;AAIXH,YAAAA,MAAM,EAAEsB,IAAI,CAACtB,MAJF;AAKXC,YAAAA,KAAK,EAAEqB,IAAI,CAACrB,KALD;AAMXC,YAAAA,OAAO,EAAEoB,IAAI,CAACpB;AANH;AADL,SAAd;AAUH;AACJ,KAfmB,CAXpB;AA2BH,GAnG8C,CAqGnD;;;AAEIG,EAAAA,aAAa,GAAI;AAEb,QAAIA,aAAa,GAAG,KAAKV,KAAL,CAAWC,aAAX,CAAyBE,MAAzB,GAAkC,CAAtD;AACA,QAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWC,aAAX,CAAyBG,IAApC,CAHa,CAKb;;AACA,QAAIM,aAAa,GAAG,CAApB,EAAuB;AAEnBA,MAAAA,aAAa,GAAG,EAAhB;AACAN,MAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;AACH;;AAEDwB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,aAAa,GAAG,GAAhB,GAAsBN,IAAlC,EAZa,CAcb;;AACAa,IAAAA,KAAK,CAAC,8CAAD,EAAiD;AAElDC,MAAAA,MAAM,EAAE,MAF0C;AAGlDC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAHyC;AAKlDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAU,KAAKvB,KAAL,CAAWwB,MADJ;AAEjB,iBAASb,aAFQ;AAGjB,gBAAQN;AAHS,OAAf;AAL4C,KAAjD,CAAL,CAWGoB,IAXH,CAWQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AAE7C,UAAIF,QAAQ,CAACK,EAAb,EAAiB;AAEb,aAAKhB,QAAL,CAAc;AACVb,UAAAA,aAAa,EAAE,EACX,GAAG,KAAKD,KAAL,CAAWC,aADH;AAEXC,YAAAA,IAAI,EAAEP,MAAM,CAACe,aAAD,CAFD;AAGXP,YAAAA,MAAM,EAAEO,aAHG;AAIXN,YAAAA,IAAI,EAAEA,IAJK;AAKXC,YAAAA,MAAM,EAAEsB,IAAI,CAACtB,MALF;AAMXC,YAAAA,KAAK,EAAEqB,IAAI,CAACrB,KAND;AAOXC,YAAAA,OAAO,EAAEoB,IAAI,CAACpB;AAPH;AADL,SAAd;AAWH;AACJ,KAhBmB,CAXpB;AA4BH,GAlJ8C,CAoJnD;;;AAEIwB,EAAAA,MAAM,GAAG;AAEL;AACA,UAAMC,YAAY,GAAG,IAAInB,IAAJ,GAAWE,QAAX,KAAwB,CAA7C;AAEA,UAAMkB,IAAI,GAAI,KAAKjC,KAAL,CAAWC,aAAX,CAAyBM,OAAzB,GAAmC,CAAnC,GAAuC,GAAvC,GAA6C,EAA3D;AAEA,UAAMF,MAAM,GAAG,KAAKL,KAAL,CAAWC,aAAX,CAAyBI,MAAzB,GAAkC,KAAKN,KAAL,CAAWmC,QAAX,CAAoBC,YAArE;AACA,UAAM7B,KAAK,GAAG,KAAKN,KAAL,CAAWC,aAAX,CAAyBK,KAAzB,GAAiC,KAAKP,KAAL,CAAWmC,QAAX,CAAoBC,YAAnE;AACA,UAAM5B,OAAO,GAAG,KAAKP,KAAL,CAAWC,aAAX,CAAyBM,OAAzB,GAAmC,KAAKR,KAAL,CAAWmC,QAAX,CAAoBC,YAAvE;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,GAAG,EAAE3C,KAAV;AAAiB,MAAA,GAAG,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAII;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,GAAG,EAAEC,SAAzB;AAAoC,MAAA,GAAG,EAAC,YAAxC;AAAqD,MAAA,OAAO,EAAE,KAAKiB,aAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGK,KAAKV,KAAL,CAAWC,aAAX,CAAyBC,IAH9B,eAKI;AAAK,MAAA,EAAE,EAAC,YAAR;AACI,MAAA,SAAS,EAAG,KAAKF,KAAL,CAAWC,aAAX,CAAyBE,MAAzB,KAAoC6B,YAApC,GAAmD,MAAnD,GAA4D,EAD5E;AAEI,MAAA,GAAG,EAAEtC,UAFT;AAEqB,MAAA,GAAG,EAAC,aAFzB;AAEuC,MAAA,OAAO,EAAE,KAAKc,SAFrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAJJ,eAcI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACUZ,eAAe,CAACS,MAAM,CAAC+B,OAAP,CAAe,CAAf,CAAD,CADzB,UAEK,KAAKrC,KAAL,CAAWmC,QAAX,CAAoBhC,IAFzB,CAdJ,eAmBI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACUN,eAAe,CAACU,KAAK,CAAC8B,OAAN,CAAc,CAAd,CAAD,CADzB,UAEK,KAAKrC,KAAL,CAAWmC,QAAX,CAAoBhC,IAFzB,CAnBJ,eAwBI;AAAK,MAAA,EAAE,EAAE,SAAT;AAAmB,MAAA,SAAS,EAAG,KAAKF,KAAL,CAAWC,aAAX,CAAyBM,OAAzB,GAAmC,CAAnC,GAAuC,MAAvC,GAAgD,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK0B,IADL,EACWrC,eAAe,CAACW,OAAO,CAAC6B,OAAR,CAAgB,CAAhB,CAAD,CAD1B,UAEK,KAAKrC,KAAL,CAAWmC,QAAX,CAAoBhC,IAFzB,CAxBJ,CADJ;AA+BH;;AAhM8C","sourcesContent":["import React, {Component} from \"react\";\r\nimport graph from \"../images/graph.png\";\r\nimport leftArrow from \"../images/left_arrow.png\";\r\nimport rightArrow from \"../images/right_arrow.png\";\r\n\r\nimport Months from \"../Months\";\r\nimport NumberFormatter from \"../NumberFormatter\";\r\n\r\nexport default class MonthReport extends Component {\r\n\r\n// Konstruktor /////////////////////////////////////////////////////////////////////\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            // Zobrazený měsíc\r\n            selectedMonth: {\r\n                name: \"\",\r\n                number: 0,\r\n                year: 0,\r\n                income: 0,\r\n                costs: 0,\r\n                balance: 0,\r\n            },\r\n        }\r\n\r\n        this.nextMonth = this.nextMonth.bind(this);\r\n        this.previousMonth = this.previousMonth.bind(this);\r\n    }\r\n\r\n// Získání dat /////////////////////////////////////////////////////////////////////\r\n\r\n    componentDidMount() {\r\n\r\n        const date = new Date();\r\n\r\n        this.setState({\r\n\r\n            selectedMonth: {\r\n                ...this.state.selectedMonth,\r\n                name: Months[date.getMonth() + 1],\r\n                number: date.getMonth() + 1,\r\n                year: date.getFullYear(),\r\n            },\r\n        });\r\n\r\n        // Request - vrací součet plateb za zadaného měsíce\r\n        fetch(\"http://localhost:8080/api/payments/sum/month\", {\r\n\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n\r\n            body: JSON.stringify({\r\n                \"userID\": this.props.userID,\r\n                \"month\": date.getMonth() + 1,\r\n                \"year\": date.getFullYear(),\r\n            }), \r\n\r\n        }).then(response => response.json().then(data => this.setState({\r\n\r\n            selectedMonth: {\r\n                    ...this.state.selectedMonth,\r\n                    income: data.income,\r\n                    costs: data.costs,\r\n                    balance: data.balance,\r\n            },\r\n        })));\r\n    }\r\n\r\n// Načíst data z dalšího měsíce ///////////////////////////////////////////////////\r\n\r\n    nextMonth() {\r\n\r\n        const nextMonth = this.state.selectedMonth.number + 1;\r\n\r\n        console.log(previousMonth + \"/\" + year);\r\n\r\n        // Request - vrací součet plateb za zadaného měsíce\r\n        fetch(\"http://localhost:8080/api/payments/sum/month\", {\r\n\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n\r\n        body: JSON.stringify({\r\n            \"userID\": this.props.userID,\r\n            \"month\": nextMonth,\r\n            \"year\": this.state.selectedMonth.year,\r\n        }),\r\n\r\n        }).then(response => response.json().then(data => {\r\n\r\n            if (response.ok) {\r\n\r\n                this.setState({\r\n                    selectedMonth: {\r\n                        ...this.state.selectedMonth,\r\n                        name: Months[nextMonth],\r\n                        number: nextMonth,\r\n                        income: data.income,\r\n                        costs: data.costs,\r\n                        balance: data.balance,\r\n                    }\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n// Načíst data z minulého měsíce /////////////////////////////////////////////////\r\n\r\n    previousMonth () {\r\n\r\n        let previousMonth = this.state.selectedMonth.number - 1;\r\n        let year = this.state.selectedMonth.year;\r\n\r\n        // Přechod na jiný rok\r\n        if (previousMonth < 1) {\r\n\r\n            previousMonth = 12;\r\n            year = year - 1;\r\n        } \r\n\r\n        console.log(previousMonth + \"/\" + year);\r\n\r\n        // Request - vrací součet plateb za zadaného měsíce\r\n        fetch(\"http://localhost:8080/api/payments/sum/month\", {\r\n\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n\r\n            body: JSON.stringify({\r\n                \"userID\": this.props.userID,\r\n                \"month\": previousMonth,\r\n                \"year\": year,\r\n            }),\r\n\r\n        }).then(response => response.json().then(data => {\r\n\r\n            if (response.ok) {\r\n\r\n                this.setState({\r\n                    selectedMonth: {\r\n                        ...this.state.selectedMonth,\r\n                        name: Months[previousMonth],\r\n                        number: previousMonth,\r\n                        year: year,\r\n                        income: data.income,\r\n                        costs: data.costs,\r\n                        balance: data.balance,\r\n                    }\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n// Vykreslení ////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n\r\n        // Aktuální měsíc (číselně)\r\n        const currentMonth = new Date().getMonth() + 1;\r\n\r\n        const mark = (this.state.selectedMonth.balance > 0 ? \"+\" : \"\");\r\n\r\n        const income = this.state.selectedMonth.income * this.props.currency.exchangeRate;\r\n        const costs = this.state.selectedMonth.costs * this.props.currency.exchangeRate;\r\n        const balance = this.state.selectedMonth.balance * this.props.currency.exchangeRate;\r\n\r\n        return(\r\n            <div>\r\n\r\n                <img src={graph} alt=\"Graph\" />\r\n\r\n                <div id=\"month\">\r\n                    <img id=\"leftArrow\" src={leftArrow} alt=\"Left Arrow\" onClick={this.previousMonth} />\r\n\r\n                    {this.state.selectedMonth.name}\r\n\r\n                    <img id=\"rightArrow\" \r\n                        className={(this.state.selectedMonth.number === currentMonth ? \"hide\" : \"\")} \r\n                        src={rightArrow} alt=\"Right Arrow\" onClick={this.nextMonth} />\r\n                </div>\r\n\r\n                <div id=\"income\">\r\n                    &#43;{NumberFormatter(income.toFixed(2))}&nbsp;\r\n                    {this.props.currency.name}\r\n                </div>\r\n\r\n                <div id=\"costs\">\r\n                    &#45;{NumberFormatter(costs.toFixed(2))}&nbsp;\r\n                    {this.props.currency.name}\r\n                </div>\r\n\r\n                <div id =\"balance\" className={(this.state.selectedMonth.balance > 0 ? \"plus\" : \"minus\")}>\r\n                    {mark}{NumberFormatter(balance.toFixed(2))}&nbsp;\r\n                    {this.props.currency.name}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}